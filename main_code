''' Vest Tracker
Sean Gunther
October 7, 2022 '''
# this code is very slow and the calibration values do not read accurately.
# next step is to optimize openCV on raspberry pi


import cv2 #Open CV for visual identification
import numpy as np # Dependent for openCV
import datetime #generates time stamp for the video recorded
import picamera as picam
import time

camera = picam.PiCamera()

#mask calibration values below
#low_HSV_min = (40,0,93) # lowest values recorded in 8 samples 10/7/22, the low and high vals give the broadest range
#high_HSV_max = (95,255,255) #max values recorded in 8 samples 10/7/22
avg_HSV_min = (46,97,142) #avg values for 8 samples, stdDev = [5,44,49]
avg_HSV_max = (82,239,255) # avg values for 8 samples, stdDev = [8,34,0]


while True:
    frame = camera.capture("cap.png") # reads single frame
    temp_frame = cv2.imread("/home/vest-tracker/Desktop/Testcode/cap.png")
    hsv_frame = cv2.cvtColor(temp_frame, cv2.COLOR_BGR2HSV) #Converts the camera image into HSV
    Mask = cv2.inRange(hsv_frame, avg_HSV_min, avg_HSV_max)

    cv2.imshow('Mask', Mask)
    key = cv2.waitKey(0)
    cv2.destroyAllWindows()

    
    

